# Generated by Django 4.2.21 on 2025-06-10 21:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import sortedm2m.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('eveonline', '0017_alliance_and_corp_names_are_not_unique'),
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('authentication', '0024_alter_userprofile_language'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='General',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'permissions': (('basic_access', 'Can access this app'),),
                'managed': False,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Check',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=32)),
                ('comment', models.CharField(blank=True, max_length=255)),
                ('description', models.CharField(blank=True, help_text='Short description for users', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=32)),
                ('comment', models.CharField(blank=True, max_length=255)),
                ('description', models.CharField(blank=True, help_text='Short description for users', max_length=255)),
                ('body', models.TextField(blank=True, help_text='Body text (django template snippet)')),
                ('is_selfguided', models.BooleanField(default=False, help_text='Overrides any Smart Filters assigned to this step.')),
                ('checks', sortedm2m.fields.SortedManyToManyField(blank=True, help_text=None, to='workflows.check')),
            ],
        ),
        migrations.CreateModel(
            name='Wizard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name', max_length=32)),
                ('comment', models.CharField(blank=True, max_length=255)),
                ('description', models.CharField(blank=True, help_text='Short description for users', max_length=255)),
                ('permalink', models.SlugField(blank=True, help_text='user friendly permalink slug', null=True)),
                ('body', models.TextField(blank=True, help_text='Body text for final page (django template snippet)')),
                ('auto_assigned', models.BooleanField(default=False, help_text='Will automatically assign to users when they meet visibility requirements')),
                ('alliances', models.ManyToManyField(blank=True, help_text='Alliances that can access this wizard.', to='eveonline.eveallianceinfo')),
                ('characters', models.ManyToManyField(blank=True, help_text='Characters that can access this wizard.', to='eveonline.evecharacter')),
                ('corporations', models.ManyToManyField(blank=True, help_text='Corporations that can access this wizard.', to='eveonline.evecorporationinfo')),
                ('factions', models.ManyToManyField(blank=True, help_text='Factions that can access this wizard.', to='eveonline.evefactioninfo')),
                ('groups', models.ManyToManyField(blank=True, help_text='Groups that can access this wizard.', to='auth.group')),
                ('states', models.ManyToManyField(blank=True, help_text='States that can access this wizard.', to='authentication.state')),
                ('steps', sortedm2m.fields.SortedManyToManyField(help_text=None, to='workflows.step')),
            ],
        ),
        migrations.CreateModel(
            name='StepCompletion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflows.step')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('wizard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflows.wizard')),
            ],
        ),
        migrations.CreateModel(
            name='CheckFilter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(editable=False)),
                ('content_type', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Smart Filter Binding',
                'verbose_name_plural': 'Smart Filter Catalog',
                'default_permissions': [],
            },
        ),
        migrations.AddField(
            model_name='check',
            name='filter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflows.checkfilter'),
        ),
        migrations.CreateModel(
            name='ActionItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('wizard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workflows.wizard')),
            ],
        ),
    ]
